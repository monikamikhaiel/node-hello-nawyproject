name: build & deploy

on:
  workflow_call:
  pull_request:
    types: [closed]
    branches:
    - master
    
jobs:
  build-push:
    runs-on: ubuntu-latest
    environment: local 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      # ESLint and Prettier must be in `package.json`
      - name: Install Node.js dependencies
        run: npm ci

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          prettier: true
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set short git commit SHA
        id: short-sha
        run: |
          shortSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$shortSha" >> $GITHUB_ENV
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nawy_node_app:${{ env.COMMIT_SHORT_SHA }}
      # - name: edit main.tf 
      #   run: sed -i 's/image     = ".\+",/image     = "${var.DOCKERHUB_USERNAME}/nawy_node_app:${var.Github_sha}"",/' terraform/main.tf
    deploy:
    runs-on: ubuntu-latest
    environment: local 
    if: ${{ success() }}
    env:
         TF_VAR_DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
         TF_VAR_Github_sha: ${{ env.COMMIT_SHORT_SHA }}
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         AWS_profile: ${{ env.AWS_PROFILE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0    
      - name: Terraform init
        id: init
        run: terraform init 
  
      - name: Terraform format & validate 
        id: fmt
        run: terraform fmt -check && terraform validate
     
      - name: Terraform plan & apply
        run: terraform plan -no-color -input=false && terraform apply -auto-approve -input=false
